version: '3.8'

services:

  flower:
    image: mher/flower
    ports:
     - 5555:5555
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672/


  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672

  redis:
    image: redis:7.0.11-alpine

  django:
    container_name: django
    build:
      context: ./dcelery
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./dcelery:/usr/src/app/
    ports:
      - 8001:8000
    environment:
      - DEBUG=1
      - SECRET_KEY=1314dr50981274rineatikı293ıtikeatml
      - ALLOWED_HOSTS=localhost,127.0.0.1
    depends_on:
      - redis

  celery:
    container_name: celery1
    build:
      context: ./dcelery
    command: celery --app=dcelery worker --hostname=celeryWorker1@%h -l INFO -Q tasks,dead_letter -E -B
    # command: celery --app=dcelery worker -l INFO -Q celery,celery:1,celery:2,celery:3
    volumes:
      - ./dcelery:/usr/src/app/
    environment:
      - DEBUG=1
      - SECRET_KEY=1314dr50981274rineatikı293ıtikeatml
      - ALLOWED_HOSTS=localhost,127.0.0.1
    depends_on:
      - redis
      - django
      - rabbitmq

  # celery2:
  #   container_name: celery2
  #   build:
  #     context: ./celeryworker
  #     dockerfile: Dockerfile
  #   command: celery -A celerytask worker --loglevel=INFO -Q queue2
  #   volumes:
  #     - ./celeryworker:/usr/src/app/
  #   depends_on:
  #     - redis
  #     - django


# command: celery --app=dcelery worker --hostname=celeryWorker1@%h -l INFO -Q tasks,dead_letter -E -B
# Buradaki -E seçeneği, Celery işçi (worker) sürecini başlatırken "event" (olay) modunu etkinleştirir. Bu mod, Celery işlemlerinin durumunu izlemenizi sağlar. İşte -E seçeneğinin yapabilecekleri:
# Eventlerin Toplanması: -E seçeneği etkinleştirildiğinde, Celery işçisi tarafından üretilen tüm olaylar (events) toplanır. Bu olaylar, işçinin başlangıcı, bitişi, işlem başına zaman bilgileri gibi işlemler hakkında bilgi sağlar.
# İzleme Arayüzü ile Entegrasyon: Eventleri toplamak, genellikle Celery'nin sağladığı izleme arayüzleri veya dış izleme araçlarıyla kullanılır. Örneğin, Flower gibi bir izleme aracı, -E seçeneği etkinleştirilmiş bir işçinin ürettiği olayları izlemek ve görselleştirmek için kullanılabilir.
# Hata Ayıklama ve Performans İyileştirmesi: Eventler, hata ayıklama sürecinde ve performans iyileştirmelerinde faydalı olabilir. Örneğin, işçi performansını değerlendirmek veya belirli görevlerin ne kadar sürede tamamlandığını anlamak için bu bilgiler kullanılabilir.
# Sonuç olarak, -E seçeneği, Celery işçisinin ürettiği olayları toplamak ve işlemlerin durumu hakkında daha fazla bilgi sağlamak için kullanılır. Bu seçenek genellikle izleme, hata ayıklama ve performans değerlendirmesi amacıyla etkinleştirilir.